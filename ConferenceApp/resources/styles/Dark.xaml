<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    >

    <!-- COLORS COLORS COLORS COLORS COLORS COLORS COLORS COLORS COLORS COLORS COLORS COLORS -->
    <SolidColorBrush x:Key="DarkGray" Color="#2e3137"></SolidColorBrush>
    <!-- pozadina prozora -->
    <SolidColorBrush x:Key="LightGray" Color="#348d6a"></SolidColorBrush>
    <!-- pozadina polja -->

    <SolidColorBrush x:Key="CustomDarkBlue" Color="#16375f"></SolidColorBrush>
    <SolidColorBrush x:Key="CustomLightBlue" Color="#0963ba"></SolidColorBrush>
    
    <SolidColorBrush x:Key="BackgroundColor" Color="#2e3137"></SolidColorBrush>
    <SolidColorBrush x:Key="CalendarSelection" Color="Silver"></SolidColorBrush>


    <!-- STYLES STYLES STYLES STYLES STYLES STYLES STYLES STYLES STYLES STYLES STYLES STYLES -->

    <Style x:Key="TextBoxStyle" TargetType="TextBox">
        <Setter Property="Foreground" Value="{StaticResource LightGray}"></Setter>
        <Setter Property="Background" Value="White"></Setter>
        <Setter Property="FontSize" Value="18"></Setter>
    </Style>

    <Style x:Key="PasswordBoxStyle" TargetType="PasswordBox">
        <Setter Property="Foreground" Value="{StaticResource LightGray}"></Setter>
        <Setter Property="Background" Value="White"></Setter>
        <Setter Property="FontSize" Value="18"></Setter>
    </Style>

    <Style x:Key="ButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource LightGray}"></Setter>
        <Setter Property="Background" Value="White"></Setter>
        <Setter Property="FontSize" Value="18"></Setter>
    </Style>

    <Style x:Key="PopupContentStyle" TargetType="{x:Type ContentControl}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border Background="DodgerBlue" CornerRadius="10">
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <SolidColorBrush x:Key="Item.MouseOver.Background" Color="DarkGray" />
    <SolidColorBrush x:Key="Item.MouseOver.Border" Color="DarkGray" />
    <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="Silver" />
    <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="Silver" />
    <Style x:Key="MyListViewItem" TargetType="{x:Type ListViewItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border x:Name="Bd"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}">
                        <!--MenuItem Content presenter-->
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--MouseOver menu item-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd"
                                            Value="{DynamicResource Item.MouseOver.Background}" />
                            <Setter Property="BorderBrush" TargetName="Bd"
                                            Value="{DynamicResource Item.MouseOver.Border}" />
                        </MultiTrigger>

                        <!--MainWindow not in focus-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd"
                                            Value="{DynamicResource Item.SelectedActive.Background}" />
                            <Setter Property="BorderBrush" TargetName="Bd"
                                            Value="{DynamicResource Item.SelectedActive.Border}" />
                        </MultiTrigger>

                        <!--Selected menu item-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd"
                                            Value="{DynamicResource Item.SelectedActive.Background}" />
                            <Setter Property="BorderBrush" TargetName="Bd"
                                            Value="{DynamicResource Item.SelectedActive.Border}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--TESTING-->
    <Style x:Key="MyPopupBoxStyle" TargetType="{x:Type materialDesign:PopupBox}">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
    </Style>


</ResourceDictionary>